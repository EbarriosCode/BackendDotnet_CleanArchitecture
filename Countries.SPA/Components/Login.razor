@layout LoginLayout
@page "/Login"

@inject HttpClient httpClient
@inject NavigationManager uriHelper
@inject ILoginService loginService

<div class="text-center">
    <img src="https://www.pragimtech.com/wp-content/uploads/2020/03/blazor-tutorial-for-beginners.png" style="width:250px; height:250px;">
</div>
<h3 class="text-center">Login</h3>
<EditForm Model="userInfo"
          OnValidSubmit="LoginUser" class="card card-body bg-light mt-5">

    <DataAnnotationsValidator />

    <div class="form-group row">
        <label for="InputUsername" class="col-md-2 col-form-label">Nombre de Usuario</label>
        <div class="col-md-10">
            <InputText id="InputUsername" Class="form-control" placeholder="Ingresa tu nombre de usuario" @bind-Value="userInfo.Email" />
            <ValidationMessage For="@(()=>userInfo.Email)" class="text-danger" />
        </div>
    </div>

    <div class="form-group row">
        <label for="InputPassword" class="col-md-2 col-form-label">Contraseña</label>
        <div class="col-md-10">
            <InputPassword id="InputPassword" Class="form-control" @bind-Value="@userInfo.Password" />
            <ValidationMessage For="@(()=>userInfo.Password)" class="text-danger" />
        </div>
    </div>
    <div class="row">
        <div class="col-md-12 text-right">
            <button type="submit" class="btn btn-success">
                @if (this.Loading)
                {<span class="spinner-border spinner-border-sm mr-1"></span>}
                Entrar
            </button>
        </div>
    </div>
</EditForm>

<label class="text-center text-danger">@ErrorMessage</label>

@code
 {
    private UserInfo userInfo = new UserInfo();
    private string ErrorMessage;
    private bool Loading;

    private async Task LoginUser()
    {
        this.Loading = true;
        var result = await httpClient.PostAsJsonAsync("api/Accounts/Login", userInfo);

        if (result.StatusCode == System.Net.HttpStatusCode.OK)
        {
            var content = result.Content.ReadFromJsonAsync<UserToken>();
            //Console.WriteLine(content.Result.Token);


            await loginService.Login(content.Result.Token);
            uriHelper.NavigateTo("");
        }
        else
        {
            this.ErrorMessage = await result.Content.ReadAsStringAsync();
            //Console.WriteLine(ErrorMessage);
        }

        this.Loading = false;
    }
}
