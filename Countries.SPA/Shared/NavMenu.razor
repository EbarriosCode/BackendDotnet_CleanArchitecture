@inject NavigationManager Navigation
@inject ILoginService loginService

<div class="top-row pl-4 navbar navbar-dark">
    <a class="navbar-brand" href="">Countries.SPA</a>
    <button class="navbar-toggler" @onclick="ToggleNavMenu">
        <span class="navbar-toggler-icon"></span>
    </button>
</div>

<div class="@NavMenuCssClass" @onclick="ToggleNavMenu">
    <ul class="nav flex-column">
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="" Match="NavLinkMatch.All">
                <span class="oi oi-home" aria-hidden="true"></span> Countries
            </NavLink>
        </li>       
        <li class="nav-item px-3">
            <NavLink class="nav-link" href="Subdivisions">
                <span class="oi oi-list-rich" aria-hidden="true"></span> Subdivisions
            </NavLink>
        </li>
        <AuthorizeView>
            <Authorized>
                <NavLink class="nav-link" href="#" @onclick="Logout">
                    <span class="oi oi-account-logout" aria-hidden="true"></span> Cerrar Sesión
                </NavLink>
            </Authorized>
        </AuthorizeView>
    </ul>
</div>

@code {
    private bool collapseNavMenu = true;

    private string NavMenuCssClass => collapseNavMenu ? "collapse" : null;

    private void ToggleNavMenu()
    {
        collapseNavMenu = !collapseNavMenu;
    }

    private async Task Logout()
    {
        await loginService.Logout();
        Navigation.NavigateTo("Login");
    }
}
